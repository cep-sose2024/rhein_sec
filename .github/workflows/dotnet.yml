name: .NET

on:
  push:
    paths:
    - 'backend/**'
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        directory: ['backend']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: 8.0.x

    - name: Restore dependencies
      run: dotnet restore ${{ matrix.directory }}

    - name: Build
      run: dotnet build ${{ matrix.directory }} --no-restore

    - name: Test
      run: dotnet test ${{ matrix.directory }} --no-build --verbosity normal

    - name: Publish
      run: dotnet publish ${{ matrix.directory }} --configuration Release --output ./backend_release

    - name: Archive production artifacts
      shell: bash
      run: |
        if [[ "${{ matrix.os }}" == "windows-latest" ]]; then
          7z a backend-${{ matrix.os }}.zip ./backend_release
        else
          tar -cvf backend-${{ matrix.os }}.tar ./backend_release
          gzip backend-${{ matrix.os }}.tar
        fi

    - name: Upload Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.os }}-backend
        path: ./backend-${{ matrix.os }}.${{ matrix.os == 'windows-latest' && 'zip' || 'tar.gz' }}

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Download Artifacts
      uses: actions/download-artifact@v2

    - name: Get version
      id: get_version
      run: echo "::set-output name=version::$(cat misc/version)"

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.release_token }}
      with:
        tag_name: backend-${{ steps.get_version.outputs.version }}
        release_name: backend-${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.release_token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./ubuntu-latest-backend/backend-ubuntu-latest.tar.gz
        asset_name: ubuntu-latest-backend-${{ steps.get_version.outputs.version }}.tar.gz
        asset_content_type: application/gzip

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.release_token }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./windows-latest-backend/backend-windows-latest.zip
        asset_name: windows-latest-backend-${{ steps.get_version.outputs.version }}.zip
        asset_content_type: application/zip